{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build-backend",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "build",
                "${workspaceFolder}/src/Api/Meme It.sln"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": "$msCompile",
            "detail": "Build the entire backend solution including all API projects"
        },
        {
            "label": "build-frontend",
            "type": "shell",
            "command": "npm",
            "args": [
                "run",
                "build"
            ],
            "options": {
                "cwd": "${workspaceFolder}/src/Web"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Build the Angular frontend application"
        },
        {
            "label": "install-frontend-deps",
            "type": "shell",
            "command": "npm",
            "args": [
                "install"
            ],
            "options": {
                "cwd": "${workspaceFolder}/src/Web"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Install npm dependencies for the Angular frontend"
        },
        {
            "label": "build-all",
            "dependsOrder": "sequence",
            "dependsOn": [
                "install-frontend-deps",
                "build-backend",
                "build-frontend"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "detail": "Build the entire application - installs frontend dependencies, builds backend, then builds frontend"
        },
        {
            "label": "start-aspire",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "run",
                "--project",
                "${workspaceFolder}/src/Api/Aspire/HexMaster.MemeIt.Aspire/HexMaster.MemeIt.Aspire.AppHost"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
            "isBackground": true,
            "problemMatcher": {
                "owner": "aspire",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Building.*$",
                    "endsPattern": "^.*Application started.*|^.*Now listening on.*|^.*Content root path.*$"
                }
            },
            "detail": "Start the .NET Aspire AppHost - orchestrates all backend and frontend services"
        },
        {
            "label": "Run Aspire AppHost",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "run",
                "--project",
                "${workspaceFolder}/src/Api/Aspire/HexMaster.MemeIt.Aspire/HexMaster.MemeIt.Aspire.AppHost"
            ],
            "group": "build",
            "isBackground": true,
            "problemMatcher": {
                "owner": "aspire",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*Building.*$",
                    "endsPattern": "^.*Application started.*|^.*Now listening on.*|^.*Content root path.*$"
                }
            },
            "detail": "Legacy task - Start the .NET Aspire AppHost (use 'start-aspire' for better experience)"
        },
        {
            "label": "run-tests",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "test",
                "${workspaceFolder}/src/Api/Meme It.sln",
                "--verbosity",
                "normal"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": "$msCompile",
            "detail": "Run all unit tests in the backend solution"
        },
        {
            "label": "clean-backend",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "clean",
                "${workspaceFolder}/src/Api/Meme It.sln"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": "$msCompile",
            "detail": "Clean all backend build artifacts"
        },
        {
            "label": "clean-frontend",
            "type": "shell",
            "command": "npx",
            "args": [
                "rimraf",
                "dist",
                "node_modules/.cache"
            ],
            "options": {
                "cwd": "${workspaceFolder}/src/Web"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Clean frontend build artifacts and cache"
        },
        {
            "label": "clean-all",
            "dependsOrder": "parallel",
            "dependsOn": [
                "clean-backend",
                "clean-frontend"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "detail": "Clean all build artifacts from both backend and frontend"
        },
        {
            "label": "rebuild-all",
            "dependsOrder": "sequence",
            "dependsOn": [
                "clean-all",
                "build-all"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "detail": "Clean and rebuild the entire application"
        },
        {
            "label": "dev",
            "dependsOrder": "sequence",
            "dependsOn": [
                "build-all",
                "start-aspire"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true
            },
            "detail": "Build everything and start the development environment with Aspire orchestration"
        }
    ]
}